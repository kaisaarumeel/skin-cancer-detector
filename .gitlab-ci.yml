stages:
  - backend-code-quality
  - backend-api-tests

cache:
  # Cache by branch name
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
  # Cache pip downloads
    - .pip-cache/

backend-code-quality:
  stage: backend-code-quality
  script:
    # Upgrade pip
    - python3 -m pip install --user --upgrade pip
    # Install deps
    - python3 -m pip install --user -r requirements-ci.txt
    
    # Ensure code is formatted correctly
    - python3 -m black . --check || (echo "❌ Code formatting check failed. Run 'black .' locally to fix formatting" && exit 1)
    
    # Ensure django system checks pass
    - cd server
    - python3 manage.py check || (echo "❌ Django system checks failed" && exit 1)
  rules: 
    # Only run on main and develop branches
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/

backend-api-tests:
  stage: backend-api-tests
  script:
    - python3 -m pip cache purge

    # Upgrade pip
    - python3 -m pip install --user --upgrade pip
    
    # Install deps
    - python3 -m pip install --user -r requirements-ci.txt
    
    # Run backend tests
    - cd server
    - python3 manage.py test --verbosity=2
  rules:
    # Only run on main and develop branches
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/