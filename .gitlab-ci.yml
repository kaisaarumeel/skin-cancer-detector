default:
  tags:
    - docker

stages:
  # - backend-code-quality
  # - backend-api-tests
  - backend-build

variables:
  DOCKER_IMAGE: python:3.12

cache:
  key: ${CI_COMMIT_REF_SLUG}-docker
  paths:
    - .docker-cache/

# cache:
#   # Cache by branch name
#   key: "${CI_COMMIT_REF_SLUG}"
#   paths:
#   # Cache pip downloads
#     - .pip-cache/

# .setup:
#   image: $DOCKER_IMAGE
#   before_script:
#     # Make pip cache directory to ensure it exists
#     - mkdir -p .pip-cache
#     # Install system dependencies for OpenCV
#     - apt-get update
#     - apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev
#     # Install Python dependencies and cache them
#     - python -m pip install --cache-dir .pip-cache -r requirements.txt

# backend-code-quality:
#   extends: .setup
#   stage: backend-code-quality
#   script:
#     # Ensure code is formatted correctly
#     - python -m black . --check || (echo "❌ Code formatting check failed. Run 'black .' locally to fix formatting" && exit 1)
    
#     # Ensure django system checks pass
#     - cd server
#     - python manage.py check || (echo "❌ Django system checks failed" && exit 1)
#   rules: 
#     # Only run on main and develop branches
#     - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/

# backend-api-tests:
#   extends: .setup
#   stage: backend-api-tests
#   script:
#     # Run backend tests
#     - cd server
#     - python manage.py test --verbosity=2
#   rules:
#     # Only run on main and develop branches
#     - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/

backend-build:
  stage: backend-build
  image: docker:24.0.2
  tags: 
    - docker-build
  services:
    - docker:24.0.2-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY/courses/dit826/2024/group6/skinscan:latest || true
    - docker build --cache-from=$CI_REGISTRY/courses/dit826/2024/group6/skinscan:latest . -t $CI_REGISTRY/courses/dit826/2024/group6/skinscan:latest .
    - docker push $CI_REGISTRY/courses/dit826/2024/group6/skinscan:latest
  rules: 
    # Only run on main and develop branches
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/