default:
  tags:
    - docker

stages:
  - backend-code-quality
  - backend-api-tests

variables:
  DOCKER_IMAGE: python:3.12

cache:
  # Cache by branch name
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
  # Cache pip downloads
    - .pip-cache/

.setup:
  image: $DOCKER_IMAGE
  before_script:
    # Make pip cache directory to ensure it exists
    - mkdir -p .pip-cache
    # Debug commands to check working directory and cache location
    - echo "Current working directory:"
    - pwd
    - echo "Contents of the working directory:"
    - ls -la
    - echo "Contents of .pip-cache/ (if exists):"
    - ls -la .pip-cache || echo ".pip-cache/ directory does not exist yet"
    # Install system dependencies for OpenCV
    - apt-get update
    - apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev
    # Install Python dependencies and cache them
    - python -m pip install --cache-dir .pip-cache -r requirements.txt

backend-code-quality:
  extends: .setup
  stage: backend-code-quality
  script:
    # Ensure code is formatted correctly
    - python -m black . --check || (echo "❌ Code formatting check failed. Run 'black .' locally to fix formatting" && exit 1)
    
    # Ensure django system checks pass
    - cd server
    - python manage.py check || (echo "❌ Django system checks failed" && exit 1)
  rules: 
    # Only run on main and develop branches
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/

backend-api-tests:
  extends: .setup
  stage: backend-api-tests
  script:
    # Run backend tests
    - cd server
    - python manage.py test --verbosity=2
  rules:
    # Only run on main and develop branches
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /(main|develop)/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /(main|develop)/
